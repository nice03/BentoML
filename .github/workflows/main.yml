name: DEV HelloBot Studio Docker Image CI

on:
  push:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - name: Build the Docker image
      uses: actions/checkout@v2
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r ./bentoml/guides/quick-start/requirements.txt; fi
        python ./bentoml/guides/quick-start/main.py

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get image tag(verion)
      id: image
      run: |
        VERSION=$(echo ${{ github.sha }} | cut -c1-8)
        echo VERSION=$VERSION
        echo "::set-output name=version::$VERSION"
    - name: Build, tag, and push image to Amazon ECR
      id: image-info
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hlb/BentoML
        IMAGE_TAG: ${{ steps.image.outputs.version }}
      run: |
        echo "registry=$ECR_REGISTRY" >> $GITHUB_ENV
        echo "repository=$ECR_REPOSITORY" >> $GITHUB_ENV
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_ENV
        echo "::set-output name=ecr_repository::$ECR_REPOSITORY"
        echo "::set-output name=image_tag::$IMAGE_TAG"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
